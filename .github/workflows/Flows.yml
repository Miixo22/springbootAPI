name: Build, Test, and Deploy

on:
  push:
    branches: [ main ]

env:
  IMAGE_NAME: miixo22/springbootapi-app
  CONTAINER_NAME: springboot-app
  DB_CONTAINER_NAME: postgres-db
  DB_IMAGE: postgres:15
  DB_PORT: 5432
  APP_PORT: 8080
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: 123456
  POSTGRES_DB: tasklistdb

jobs:
  # 1️⃣ Build and Push on GitHub-hosted runner
  build_and_push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'maven'

      - name: Build and test with Maven
        run: mvn clean verify

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build -t $IMAGE_NAME:latest .
          docker push $IMAGE_NAME:latest

  # 2️⃣ Deploy on Ubuntu VM (self-hosted runner)
  deploy:
    needs: build_and_push
    runs-on: self-hosted

    steps:
      - name: Log in to Docker
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Pull latest app image
        run: docker pull $IMAGE_NAME:latest

      - name: Start PostgreSQL container
        run: |
          echo "Starting PostgreSQL container..."
          docker stop $DB_CONTAINER_NAME || true
          docker rm $DB_CONTAINER_NAME || true

          docker run -d \
            --name $DB_CONTAINER_NAME \
            -e POSTGRES_USER=$POSTGRES_USER \
            -e POSTGRES_PASSWORD=$POSTGRES_PASSWORD \
            -e POSTGRES_DB=$POSTGRES_DB \
            -v pgdata:/var/lib/postgresql/data \
            -p $DB_PORT:5432 \
            $DB_IMAGE

      - name: Start Spring Boot app container
        run: |
          echo "Starting application container..."
          docker stop $CONTAINER_NAME || true
          docker rm $CONTAINER_NAME || true

          docker run -d \
            --name $CONTAINER_NAME \
            --link $DB_CONTAINER_NAME:db \
            -p $APP_PORT:8080 \
            -e SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/$POSTGRES_DB \
            -e SPRING_DATASOURCE_USERNAME=$POSTGRES_USER \
            -e SPRING_DATASOURCE_PASSWORD=$POSTGRES_PASSWORD \
            $IMAGE_NAME:latest
